/*
 * https://github.com/zmkfirmware/zmk/blob/main/app/include/dt-bindings/zmk/keys.h
 */

#include "zmk-nodefree-config/helper.h"
#include "zmk-nodefree-config/keypos_def/keypos_36keys.h"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define NUM 1
#define FUN 2
#define SYS 3

#define XXX &none
#define ___ &trans

#define TAPPING_TERM_MS 300 // how long a key must be pressed to trigger hold behavior.
#define COMBO_TERM_MS 30


#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  /* left hand  */
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  /* right hand */
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      /* thumbs     */

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp Q           &kp W           &kp E         &kp R             &kp T            &kp Y  &kp U            &kp I         &kp O            &kp P              
&mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D   &mt LEFT_SHIFT F  &kp G           &kp H  &mt RSHIFT J     &mt RCTRL K   &mt RIGHT_ALT L  &mt RIGHT_GUI SEMICOLON 
&kp Z           &kp X           &kp C         &kp V             &kp B           &kp N  &kp M            &kp COMMA     &kp DOT          &kp FSLH                
                                       &lt 1 ESCAPE  &lt 2 TAB  &lt 3 ENTER     &lt 4 SPACE  &lt 5 BACKSPACE  &lt 6 DELETE
            >;
        };

        media {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp R             &kp M           &kp H         &kp S            &kp V         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp E             &kp C_PREVIOUS  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp K_NEXT    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp O             &kp NUMBER_0    &kp NUMBER_1  &kp NUMBER_2     &kp NUMBER_3  &trans
                        &trans  &trans  &trans    &kp K_PLAY_PAUSE  &kp K_STOP      &kp K_MUTE
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp K_REDO    &kp K_PASTE     &kp K_COPY    &kp K_CUT  &kp K_UNDO     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp CAPSLOCK  &kp HOME        &kp UP_ARROW  &kp END    &kp PAGE_UP    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp INSERT    &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN  &trans
                        &trans  &trans  &trans    &trans        &trans          &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp K_REDO  &kp K_PASTE     &kp K_COPY      &kp K_CUT        &kp K_UNDO      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &msc MOVE_LEFT  &mmv MOVE_UP    &msc MOVE_RIGHT  &msc MOVE_UP    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc MOVE_DOWN  &trans
                        &trans  &trans  &trans    &mkp LCLK   &mkp MCLK       &mkp MB2
            >;
        };

        sym {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPS  &kp STAR              &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp COLON       &kp DLLR  &kp PERCENT           &kp CARET              &kp PLUS           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp TILDE       &kp EXCL  &kp AT                &kp HASH               &kp PIPE           &trans  &trans  &trans  &trans  &trans  &trans
                                  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER          &trans  &trans  &trans
            >;
        };

        num {
            bindings = <
&trans  &kp LEFT_BRACKET  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET    &trans  &trans                &trans                 &trans    &trans         &trans
&trans  &kp SEMICOLON     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL            &trans  &kp PLUS              &kp MINUS              &kp STAR  &kp KP_DIVIDE  &trans
&trans  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH        &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans    &trans         &trans
                                        &kp PERIOD    &kp N0        &kp MINUS            &trans  &trans                &trans
            >;
        };

        fun {
            bindings = <
&none  &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3    &bt BT_SEL 4   &trans
&none  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK     &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3   &bt BT_DISC 4  &trans
&none  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &out OUT_BLE   &out OUT_USB   &trans         &bt BT_CLR_ALL  &bt BT_CLR     &trans
                        &to 0   &trans  &trans             &trans         &trans         &trans
            >;
        };
    };
};
