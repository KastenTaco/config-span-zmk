/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

// docs: https://zmk.dev/docs/behaviors/hold-tap
#define TAPPING_TERM_MS 400 // how long a key must be pressed to trigger hold behavior.
#define COMBO_TERM_MS 150

#define DEF 0
#define MED 1
#define NAV 2
#define MOU 3
#define SYM 4
#define NUM 5
#define FUN 6

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        display-name = "Base";
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
//             | GUI | NAV | SHFT |   | SPC | SYM  | ALT |
                        bindings = <
&kp Q           &kp W           &kp E           &kp R             &kp T          &kp Y              &kp U              &kp I           &kp O            &kp P                    
&mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D     &mt LEFT_SHIFT F  &kp G          &kp H              &mt RSHIFT J       &mt RCTRL K     &mt RIGHT_ALT L  &mt RIGHT_GUI SEMICOLON  
&kp Z           &kp X           &kp C           &kp V             &kp B          &kp N              &kp M              &kp COMMA       &kp DOT          &mt APOS FSLH                 
                                &lt MED ESCAPE  &lt NAV ENTER     &lt MOU TAB    &lt SYM BACKSPACE  &lt NUM SPACE  &lt FUN DELETE
                        >;
                };
                med_layer {
                        display-name = "Med";
// -----------------------------------------------------------------------------------------
// |BTCLR|     | ESC |  ~   |     |   | TAB | HOME |  UP  | END | DEL  |
// | BT1 | GUI | ALT | CTRL | NUM |   |  /  | LEFT | DOWN | RGT | BKSP |
// | BT2 |     |     |      |     |   |  \  | ENT  |      |     |      |
//             |     |      |     |   |     |      |      |
                        bindings = <
&trans  &trans  &trans  &trans  &trans    &kp R             &kp M           &kp H         &kp S            &kp V        
&trans  &trans  &trans  &trans  &trans    &kp E             &kp C_PREVIOUS  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp K_NEXT   
&trans  &trans  &trans  &trans  &trans    &kp O             &kp NUMBER_0    &kp NUMBER_1  &kp NUMBER_2     &kp NUMBER_3
                &trans  &trans  &trans    &kp K_PLAY_PAUSE  &kp K_STOP      &kp K_MUTE
                        >;
                };

                nav_layer {
                        display-name = "Nav";
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |
// |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |
//             | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&trans  &trans  &trans  &trans  &trans    &kp K_REDO    &kp K_PASTE     &kp K_COPY    &kp K_CUT  &kp K_UNDO    
&trans  &trans  &trans  &trans  &trans    &kp CAPSLOCK  &kp HOME        &kp UP_ARROW  &kp END    &kp PAGE_UP   
&trans  &trans  &trans  &trans  &trans    &kp INSERT    &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN
                &trans  &trans  &trans    &trans        &trans          &trans
                        >;
                };

// This layer is unreachable until "tri layer state" is sorted out.
// Leaving it here for completeness.
                mou_layer {
                        display-name = "Mou";
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
&trans  &trans  &trans  &trans  &trans   &kp K_REDO  &kp K_PASTE  &kp K_COPY   &kp K_CUT  &kp K_UNDO  
&trans  &trans  &trans  &trans  &trans   &none       &trans       &trans       &trans     &trans      
&trans  &trans  &trans  &trans  &trans   &trans      &trans       &trans       &trans     &trans      
                &trans  &trans  &trans   &mkp LCLK   &mkp MCLK    &mkp MB2
                        >;
                };
                sym_layer {
                        display-name = "Sym";
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
&kp LEFT_BRACE  &kp AMPS  &kp STAR              &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &trans  &trans  &trans  &trans  &trans 
&kp COLON       &kp DLLR  &kp PERCENT           &kp CARET              &kp PLUS           &trans  &trans  &trans  &trans  &trans 
&kp TILDE       &kp EXCL  &kp AT                &kp HASH               &kp PIPE           &trans  &trans  &trans  &trans  &trans 
                          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER          &trans  &trans  &trans
                        >;
                };

                num_layer {
                        display-name = "Num";
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
&kp LEFT_BRACKET  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET    &trans  &trans                &trans                 &trans    &trans        
&kp SEMICOLON     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL            &trans  &kp PLUS              &kp MINUS              &kp STAR  &kp SLASH 
&kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH        &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans    &trans         
                                &kp PERIOD    &kp N0        &kp MINUS            &trans  &trans                &trans
                        >;
                };

                fun_layer {
                        display-name = "Fun";
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
&kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3    &bt BT_SEL 4   
&kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK     &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3   &bt BT_DISC 4  
&kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &out OUT_BLE   &out OUT_USB   &trans         &bt BT_CLR_ALL  &bt BT_CLR     
                 &to 0   &trans  &trans             &trans         &trans         &trans
                        >;
                };
        };
};
