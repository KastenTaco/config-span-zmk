/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "zmk-nodefree-config/helper.h"
#include "zmk-nodefree-config/keypos_def/keypos_36keys.h"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>


#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  /* left hand  */
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  /* right hand */
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      /* thumbs     */

#define DEF 0
#define GAM 1
#define GAN 2
#define MED 3
#define NAV 4
#define MOU 5
#define SYM 6
#define NUM 7
#define FUN 8


// Combos

#undef COMBO_HOOK
#define COMBO_HOOK
#define COMBO_TERM_FAST 25
#define COMBO_TERM_SLOW 50

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

// fullscreen and refresh
ZMK_COMBO(fscr, &kp F11, RT0 RT1, DEF, COMBO_TERM_FAST)        
ZMK_COMBO(refr, &kp F5, RB0 RB1, DEF, COMBO_TERM_FAST)        

// Cut Copy Paste
ZMK_COMBO(paste, &kp LC(V), LB0 LB1, DEF, COMBO_TERM_FAST)
ZMK_COMBO(copy, &kp LC(C), LB1 LB2, DEF, COMBO_TERM_FAST)
ZMK_COMBO(cut, &kp LC(X), LB2 LB3, DEF, COMBO_TERM_FAST)

// Previous and next
ZMK_COMBO(undo, &kp LC(Y), LT1 LT2, DEF, COMBO_TERM_FAST)
ZMK_COMBO(redo, &kp LC(Z), LT2 LT3, DEF, COMBO_TERM_FAST)

// Symbols on Base paranthesis minus
ZMK_COMBO(lbrc, &kp LPAR, RM0 RM1, DEF, COMBO_TERM_FAST)
ZMK_COMBO(rbrc, &kp RPAR, RM1 RM2, DEF, COMBO_TERM_FAST)
ZMK_COMBO(dash, &kp MINUS, RB1 RB2, DEF, COMBO_TERM_FAST)

//backspace and apost   
ZMK_COMBO(back, &kp BACKSPACE, RT3 RT4, DEF, COMBO_TERM_SLOW)
ZMK_COMBO(apos, &kp APOS, RM3 RM4, DEF, COMBO_TERM_SLOW)

//Caps word
ZMK_COMBO(caps, &caps_word, LM1 RM1, DEF, COMBO_TERM_SLOW)

//Bootloader
ZMK_COMBO(lrst, &bootloader, LT4 LB0, FUN, COMBO_TERM_SLOW)
ZMK_COMBO(rrst, &bootloader, RT4 RB0, MED, COMBO_TERM_SLOW)

&mt{
        flavor = "balanced";
        tapping-term-ms = <350>;
        quick-tap-ms = <250>;
        require-prior-idle-ms = <200>;
};

&lt{
        quick-tap-ms = <250>;
};

/ {

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        display-name = "Base";
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
//             | GUI | NAV | SHFT |   | SPC | SYM  | ALT |
                        bindings = <
&kp Q           &kp W           &kp E           &kp R             &kp T            &kp Y              &kp U              &kp I           &kp O            &kp P                    
&kp A           &mt LEFT_ALT S  &mt LCTRL D     &mt LEFT_SHIFT F  &kp G            &kp H              &mt RSHIFT J       &mt RCTRL K     &mt RIGHT_ALT L  &mt APOS SEMICOLON
&mt LEFT_GUI Z  &kp X           &kp C           &kp V             &kp B            &kp N              &kp M              &kp COMMA       &kp DOT          &mt RIGHT_GUI FSLH
                                &lt MED ESCAPE  &lt NAV ENTER     &lt MOU TAB      &lt SYM BACKSPACE  &lt NUM SPACE  &lt FUN DELETE
                        >;
                };

                gam_layer {
                        display-name = "Game";
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
//             | GUI | NAV | SHFT |   | SPC | SYM  | ALT |
                        bindings = <
   &kp TAB    &kp Q         &kp W          &kp E          &kp R            &trans             &trans         &trans          &trans  &trans                   
   &kp G      &kp A         &kp S          &kp D          &kp F            &trans             &trans         &trans          &trans  &trans
   &kp LCTRL  &kp Z         &kp X          &kp C          &kp V            &trans             &trans         &trans          &trans  &trans
                            &mt M LSHIFT   &lt GAN ENTER  &mt TAB SPACE    &lt SYM BACKSPACE  &lt NUM SPACE  &lt FUN DELETE
                        >;
                };
                gan_layer {
                        display-name = "GameN";
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
//             | GUI | NAV | SHFT |   | SPC | SYM  | ALT |
                        bindings = <
   &kp 1      &kp 2         &kp 3          &kp 4         &kp 5            &trans  &trans  &trans  &trans  &trans                   
   &kp G      &kp A         &kp S          &kp D         &kp F            &trans  &trans  &trans  &trans  &trans
   &kp LCTRL  &kp Z         &kp X          &kp C         &kp V            &trans  &trans  &trans  &trans  &trans
                            &mt M LSHIFT   &trans        &mt TAB SPACE    &trans  &trans  &trans
                        >;
                };

                med_layer {
                        display-name = "Med";
// -----------------------------------------------------------------------------------------
// |BTCLR|     | ESC |  ~   |     |   | TAB | HOME |  UP  | END | DEL  |
// | BT1 | GUI | ALT | CTRL | NUM |   |  /  | LEFT | DOWN | RGT | BKSP |
// | BT2 |     |     |      |     |   |  \  | ENT  |      |     |      |
//             |     |      |     |   |     |      |      |
                        bindings = <
&trans  &trans  &trans  &trans  &trans    &kp R             &kp M           &kp H         &kp S            &kp V        
&trans  &trans  &trans  &trans  &trans    &kp E             &kp C_PREVIOUS  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp K_NEXT   
&trans  &trans  &trans  &trans  &trans    &kp O             &kp NUMBER_0    &kp NUMBER_1  &kp NUMBER_2     &kp NUMBER_3
                &trans  &trans  &trans    &kp K_PLAY_PAUSE  &kp K_STOP      &kp K_MUTE
                        >;
                };

                nav_layer {
                        display-name = "Nav";
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |
// |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |
//             | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&trans  &trans  &trans  &trans  &trans    &kp K_REDO    &kp K_PASTE     &kp K_COPY    &kp K_CUT  &kp K_UNDO    
&trans  &trans  &trans  &trans  &trans    &kp CAPSLOCK  &kp HOME        &kp UP_ARROW  &kp END    &kp PAGE_UP   
&trans  &trans  &trans  &trans  &trans    &kp INSERT    &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN
                &trans  &trans  &trans    &trans        &trans          &trans
                        >;
                };

// This layer is unreachable until "tri layer state" is sorted out.
// Leaving it here for completeness.
                mou_layer {
                        display-name = "Mou";
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
&trans  &trans  &trans  &trans  &kp PRINTSCREEN   &kp K_REDO  &kp K_PASTE  &kp K_COPY   &kp K_CUT  &kp K_UNDO  
&trans  &trans  &trans  &trans  &trans            &none       &trans       &trans       &trans     &trans      
&trans  &trans  &trans  &trans  &trans            &trans      &trans       &trans       &trans     &trans      
                &trans  &trans  &trans            &mkp LCLK   &mkp MCLK    &mkp MB2
                        >;
                };
                sym_layer {
                        display-name = "Sym";
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
&kp LEFT_BRACE  &kp AMPS  &kp STAR              &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &trans  &trans  &trans  &trans  &trans 
&kp COLON       &kp DLLR  &kp PERCENT           &kp CARET              &kp PLUS           &trans  &trans  &trans  &trans  &trans 
&kp TILDE       &kp EXCL  &kp AT                &kp HASH               &kp PIPE           &trans  &trans  &trans  &trans  &trans 
                          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER          &trans  &trans  &trans
                        >;
                };

                num_layer {
                        display-name = "Num";
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
&kp LEFT_BRACKET  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET    &trans  &trans                &kp GT                 &trans    &trans        
&kp SEMICOLON     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL            &trans  &kp PLUS              &kp MINUS              &kp STAR  &kp SLASH 
&kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH        &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans    &trans         
                                &kp PERIOD    &kp N0        &kp MINUS            &trans  &trans                &trans
                        >;
                };

                fun_layer {
                        display-name = "Fun";
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
&kp F12  &kp F7  &kp F8    &kp F9    &kp PRINTSCREEN    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3    &bt BT_SEL 4   
&kp F11  &kp F4  &kp F5    &kp F6    &kp SCROLLLOCK     &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3   &bt BT_DISC 4  
&kp F10  &kp F1  &kp F2    &kp F3    &kp PAUSE_BREAK    &out OUT_BLE   &out OUT_USB   &trans         &bt BT_CLR_ALL  &bt BT_CLR     
                 &to DEF   &to GAM   &tog DEF           &trans         &trans         &trans
                        >;
                };

        };
};    

